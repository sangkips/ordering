name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-west-2
  ECR_REPOSITORY: order-app
  ECS_SERVICE: ecs-service
  ECS_CLUSTER: ecs-cluster
  ECS_TASK_DEFINITION: ecs-app-task
  CONTAINER_NAME: order-app
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  AFRICASTALKING_USERNAME: ${{ secrets.AFRICASTALKING_USERNAME }}
  AFRICASTALKING_API_KEY: ${{ secrets.AFRICASTALKING_API_KEY }}
  SMS_SENDER: ${{ secrets.SMS_SENDER }}
  API_TITLE: ${{ secrets.API_TITLE }}
  ADMIN_SITE_HEADER: ${{ secrets.ADMIN_SITE_HEADER }}
  ADMIN_SITE_TITLE: ${{ secrets.ADMIN_SITE_TITLE }}
  ADMIN_SITE_INDEX_TITLE: ${{ secrets.ADMIN_SITE_INDEX_TITLE }}
  DEBUG: ${{ secrets.DEBUG }}
  API_VERSION: ${{ secrets.API_VERSION }}
  DB_NAME: ${{ secrets.DB_NAME }}
  USER: ${{ secrets.USER }}
  PASSWORD: ${{ secrets.PASSWORD }}
  HOST: ${{ secrets.HOST }}
  PORT: ${{ secrets.PORT }}


permissions:
  contents: read

jobs:
  build-and-push:
    name: Build and Push
    runs-on: self-hosted
    # environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: production
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f ./Dockerfile .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

  deploy:
    name: Deploy
    runs-on: self-hosted

    needs: build-and-push
    
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Deploy Amazon ECS task definition
      run: 
        aws ecs update-service --cluster $ECS_CLUSTER --no-paginate --service $ECS_SERVICE --force-new-deployment